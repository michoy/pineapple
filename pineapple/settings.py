"""
Django settings for pineapple project.

Generated by 'django-admin startproject' using Django 1.10.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'a23vukslfng-f39jo_=%@76a73ofgbg0x@6s-yc8-u!q@$8mhn'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Host names which this server can serve. Need to be specified to avoid HTTP Host header attacks
# If you deploy Pineapple, this line will most likely need to be changed
ALLOWED_HOSTS = ['localhost', '127.0.0.1', '[::1]', 'pineapple.com', 'pineapple.no']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'exercise',
    'overview',
    'about',
    'botTester',
    'course',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pineapple.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pineapple.wsgi.application'

# Database

# MySQL:
# For this to work as it should, you must create a local database with the correct name and permissions.
# A short guide (windows), it is assumed that mysql is installed an that you have created a root account:
# Open CMD
# Log in to MySQL as administrator:
#       mysql -u root -p
# (Enter password)
# Create a new database named "pinedatabase":
#       CREATE DATABASE pinedatabase CHARACTER SET utf8;
# Give the database correct permissions (username and password is "admin"):
#       GRANT ALL PRIVILEGES ON pinedatabase.* To 'admin'@'127.0.0.1' IDENTIFIED BY 'admin';
DATABASES = {
    'default': {
        'NAME': 'pinedatabase',
        'ENGINE': 'mysql.connector.django',
        'USER': 'admin',
        'PASSWORD': 'admin',

        'OPTIONS': {
          'autocommit': True,
        },
    }
}

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'pinebase.db'),
#    }
#}
#'''
#    'default': {
#        'ENGINE': 'mysql.connector.django',
#        'NAME': 'pinedatabase',
#        'USER': 'admin',
#        'PASSWORD': 'admin',
#        'OPTIONS': {
#          'autocommit': True,
#        }
#    }
#}
#'''

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Oslo'

USE_I18N = True

USE_L10N = True

# Put this to False in order to make MySQL play nice
USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    '/var/www/static/',
]
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

# Login page
LOGIN_URL = '/login/'  # Url where log in happens

LOGIN_REDIRECT_URL = '/overview/'  # Url used for redirection after successfull login

# Production server optimizations
CONN_MAX_AGE = None
